#20151119 Progress Report
#weiting
# affymetrix microarray data analysis
# reference the biobase reference of expressionSet
#set working directory
setwd("/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114")


#load the data
library(affy)
#microarray data structure: assayData, featureData(annotation),phenoData, protocolData, experimentData


source("https://bioconductor.org/biocLite.R")
biocLite("Biobase")
library(simpleaffy)
#file arrange
set1=list.files("/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 1 total",pattern="[CEL]")
set2=list.files("/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 2 CLS CLF",pattern="[CEL]")
set3=list.files("/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 3 sphere",pattern="[CEL]")
set4=list.files("/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 4 time series",pattern="[CEL]")
#phenodata 
phenodata_set1=matrix(rep(set1, 2) , ncol=2)
phenodata_set1=as.data.frame(phenodata_set1)
colnames(phenodata_set1)=c("Name", "FileName")
phenodata_set1$experiment_set=c(rep("set2",3),"set4","set4",rep("set2",3),"set4",rep("set3",3))
write.table(phenodata_set1,"/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set1.txt",quote=F,sep="\t",row.names=F)

##set2
phenodata_set2=matrix(rep(set2, 2) , ncol=2)
phenodata_set2=as.data.frame(phenodata_set2)
colnames(phenodata_set2)=c("Name", "FileName")
phenodata_set2$experiment_set=c(rep("set2_1",3),rep("set2_2",3))
write.table(phenodata_set2,"/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set2.txt",quote=F,sep="\t",row.names=F)
##set3
phenodata_set3=matrix(rep(set3, 2) , ncol=2)
phenodata_set3=as.data.frame(phenodata_set3)
colnames(phenodata_set3)=c("Name", "FileName")
phenodata_set3$experiment_set=c(rep("set3",3))
write.table(phenodata_set3,"/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set3.txt",quote=F,sep="\t",row.names=F)
##set4
phenodata_set4=matrix(rep(set4, 2) , ncol=2)
phenodata_set4=as.data.frame(phenodata_set4)
colnames(phenodata_set4)=c("Name", "FileName")
phenodata_set4$experiment_set=c("set4_3","set4_1","set4_2")
write.table(phenodata_set4,"/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set4.txt",quote=F,sep="\t",row.names=F,)

##load the data
celfile_set1=ReadAffy(celfile.path="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 1 total",phenoData="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set1.txt")
celfile_set2=ReadAffy(celfile.path="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 2 CLS CLF",phenoData="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set2.txt")
celfile_set3=ReadAffy(celfile.path="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 3 sphere",phenoData="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set3.txt")
celfile_set4=ReadAffy(celfile.path="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/set 4 time series",phenoData="/Users/jasonlin/Documents/2015 實驗室資料處理/201510 microarray/raw data 20100114/phenodata_set4.txt")
library(RColorBrewer)
cols=brewer.pal(8,"Set2")
boxplot(celfile_set1,col=cols, las=2,main="set1")

#Expression profile
ecelfile_set1<-exprs(celfile_set1)
ecelfile_set2<-exprs(celfile_set2)
ecelfile_set3<-exprs(celfile_set3)
ecelfile_set4<-exprs(celfile_set4)
#Set 4 Quantile Normalization
dim(ecelfile_set4)
A<-log2(ecelfile_set4[,1]+1)
B<-log2(ecelfile_set4[,2]+1)
C<-log2(ecelfile_set4[,3]+1)
a<-cbind(A,B,C)
#step 1: sort each column
asort <- apply(a,2,sort)
loc<-apply(a,2,order)  #原本probe的位置apply
#step 2 :Takes the means of across rows
amean<-matrix(rep(apply(asort,1,mean),dim(a)[2],nrow=length(apply(asort,1,mean))))
amean1<-matrix(rep(apply(asort,1,mean),dim(a)[2]),nrow=length(apply(asort,1,mean)))
#step 3 :Rearranging each column to make the same ordering as the original data
norm<-matrix(0,dim(a)[1],dim(a)[2])

for(i in 1:dim(amean1)[2]){
	#norm<-matrix(0,dim(amean)[1],1)
	for (j in 1:dim(amean1)[1]){
  #cat(loc[j,i],"\t",i,"\t",j,"\t",amean[j,i],"\n")
  norm[loc[j,i],i]<-amean1[j,i]
  }
}
head(norm)

＃after quantiile normalization
library(RColorBrewer)
cols=brewer.pal(8,"Set2")
boxplot(norm,col=cols, las=2,main="set1")


#Set 1 Quantile Normalization 
dim(ecelfile_set1)
A<-log2(ecelfile_set1[,1]+1)
B<-log2(ecelfile_set1[,2]+1)
C<-log2(ecelfile_set1[,3]+1)
D<-log2(ecelfile_set1[,4]+1)
E<-log2(ecelfile_set1[,5]+1)
F<-log2(ecelfile_set1[,6]+1)
G<-log2(ecelfile_set1[,7]+1)
H<-log2(ecelfile_set1[,8]+1)
I<-log2(ecelfile_set1[,9]+1)
J<-log2(ecelfile_set1[,10]+1)
K<-log2(ecelfile_set1[,11]+1)
L<-log2(ecelfile_set1[,12]+1)
a<-cbind(A,B,C,D,E,F,G,H,I,J,K,L)
#step 1: sort each column
asort <- apply(a,2,sort)
loc<-apply(a,2,order)  #原本probe的位置apply
#step 2 :Takes the means of across rows
amean<-matrix(rep(apply(asort,1,mean),dim(a)[2],nrow=length(apply(asort,1,mean))))
amean1<-matrix(rep(apply(asort,1,mean),dim(a)[2]),nrow=length(apply(asort,1,mean))) #修改過
#step 3 :Rearranging each column to make the same ordering as the original data
norm<-matrix(0,dim(a)[1],dim(a)[2])

for(i in 1:dim(amean1)[2]){
	#norm<-matrix(0,dim(amean)[1],1)
	for (j in 1:dim(amean1)[1]){
  #cat(loc[j,i],"\t",i,"\t",j,"\t",amean[j,i],"\n")
  norm[loc[j,i],i]<-amean1[j,i]
  }
}


library(RColorBrewer)
cols=brewer.pal(8,"Set2")
boxplot(norm,col=cols, las=2,main="set1")







